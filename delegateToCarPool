const delegateToCarPool = async () => {
  if (!selectedWallet) return;

  try {
    const poolId = '138031b823a08dec4535e583ca8ea91530abd9c62b1c0b768fd1f834'; // Replace with CarPool's actual pool ID
    const tx = await selectedWallet.api.delegationTx({
      poolId: poolId,
      metadata: {
        // Any additional metadata you want to include
      }
    });

    const signedTx = await selectedWallet.api.signTx(tx);
    const txHash = await selectedWallet.api.submitTx(signedTx);

    console.log('Delegation transaction submitted:', txHash);

    // Update the UI to reflect the new delegation status
    // You might want to wait for confirmation before updating the UI
    setDelegation({
      pool: 'CarPool',
      amount: parseFloat(balance || '0'),
      epochs: 0 // This will be updated in subsequent queries
    });
  } catch (error) {
    console.error('Error delegating to CarPool:', error);
    // Handle the error and provide feedback to the user
  }
};
